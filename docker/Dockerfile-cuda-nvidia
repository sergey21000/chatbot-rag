ARG CUDA_IMAGE=12.9.1-devel-ubuntu24.04
FROM nvcr.io/nvidia/cuda:${CUDA_IMAGE} AS builder

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
	python3 python3-pip git ca-certificates ninja-build \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*
	
ENV CUDA_DOCKER_ARCH="sm_75,sm_80,sm_86,sm_89,sm_90"
ENV GGML_CUDA=1
ENV CMAKE_ARGS="-DGGML_CUDA=on -DCMAKE_CUDA_ARCHITECTURES=75;80;86;89;90"

COPY requirements/requirements-base.txt requirements/requirements-cuda.txt .
RUN pip wheel --no-cache-dir --wheel-dir /wheels -r requirements-cuda.txt


ARG CUDA_IMAGE=12.9.1-runtime-ubuntu24.04
FROM nvcr.io/nvidia/cuda:${CUDA_IMAGE}

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
	python3 python3-pip libgomp1 libgl1 libglib2.0-0 \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

COPY --from=builder /wheels /wheels
RUN pip install --no-cache-dir --break-system-packages /wheels/* && rm -rf /wheels /root/.cache/pip

WORKDIR /app
COPY modules modules
COPY tests tests
COPY app.py config.py .

ENV GRADIO_SERVER_NAME=0.0.0.0
EXPOSE 7860

CMD ["python3", "app.py"]