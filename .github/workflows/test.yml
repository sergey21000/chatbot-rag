name: Tests

on: workflow_dispatch

permissions:
  contents: read

env:
  PYTHONUTF8: 1
  LLM_MODEL_REPO: bartowski/Qwen_Qwen3-0.6B-GGUF
  LLM_MODEL_FILE: Qwen_Qwen3-0.6B-Q4_K_M.gguf
  EMBED_MODEL_REPO: sergeyzh/rubert-tiny-turbo

  LLM_MODELS_PATH: models
  EMBED_MODELS_PATH: embed_models

jobs:
  download-models:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install huggingface-hub
        run: pip install huggingface-hub[hf_xet]
          
      - name: Download models
        run: |
          hf download ${{ env.LLM_MODEL_REPO }} ${{ env.LLM_MODEL_FILE }} \
          --local-dir ${{ env.LLM_MODELS_PATH }}
          # convert dir name to "models--Alibaba-NLP--gte-multilingual-base"
          EMBED_FOLDER=$(echo "${{ env.EMBED_MODEL_REPO }}" | sed 's/\//--/g')
          hf download ${{ env.EMBED_MODEL_REPO }} \
          --local-dir ${{ env.EMBED_MODELS_PATH }}/models--$EMBED_FOLDER

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: model
          path: |
            ${{ env.LLM_MODELS_PATH }}
            ${{ env.EMBED_MODELS_PATH }}
          overwrite: true

  test-linux:
    needs: download-models
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements/requirements-cpu.txt'

      - name: Download model artifact
        uses: actions/download-artifact@v4
        with:
          name: model
          path: .
      
      - name: Check model exists
        run: |
          echo "LLM models:"
          ls -lh ${{ env.LLM_MODELS_PATH }}
          echo "Embed models:"
          ls -lh ${{ env.EMBED_MODELS_PATH }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-cpu.txt

      - name: Test with pytest
        run: |
          python -m pytest -vs

  test-windows:
    needs: download-models
    runs-on: windows-2025  # windows-2025
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements/requirements-cpu.txt'

      - name: Download model artifact
        uses: actions/download-artifact@v4
        with:
          name: model
          path: .

      - name: Check model exists
        run: |
          echo "LLM models:"
          dir ${{ env.LLM_MODELS_PATH }}
          echo "Embed models:"
          dir ${{ env.EMBED_MODELS_PATH }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-cpu.txt

      - name: Test with pytest
        run: |
          python -m pytest -vs
