name: Tests

on: workflow_dispatch

permissions:
  contents: read

env:
  PYTHONUTF8: 1
  LLM_MODEL_REPO: bartowski/Qwen_Qwen3-0.6B-GGUF
  LLM_MODEL_FILE: Qwen_Qwen3-0.6B-Q4_K_M.gguf
  EMBED_MODEL_REPO: sergeyzh/rubert-tiny-turbo
  LOCAL_DIR: models

jobs:
  download-model:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2022]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install huggingface-hub
        run: pip install huggingface-hub[hf_xet]

      - name: Create model directory (need for Windows)
        run: mkdir -p ${{ env.LOCAL_DIR }}

      - name: Cache model
        uses: actions/cache@v4
        with:
          path: ${{ env.LOCAL_DIR }}
          key: ${{ runner.os }}-model-${{ env.LLM_MODEL_REPO }}-${{ env.LLM_MODEL_FILE }}
          
      - name: Download model
        run: >
          hf download ${{ env.LLM_MODEL_REPO }} ${{ env.LLM_MODEL_FILE }} 
          --local-dir ${{ env.LOCAL_DIR }} --cache-dir ${{ env.LOCAL_DIR }}
          hf download ${{ env.EMBED_MODEL_REPO }} --local-dir ${{ env.LOCAL_DIR }} --cache-dir ${{ env.LOCAL_DIR }}
        
  test-linux:
    needs: download-model
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements/requirements-cpu.txt'

      - name: Restore model cache
        uses: actions/cache@v4
        with:
          path: ${{ env.LOCAL_DIR }}
          key: ${{ runner.os }}-model-${{ env.LLM_MODEL_REPO }}-${{ env.LLM_MODEL_FILE }}
      
      - name: Check model exists
        run: ls -lh ${{ env.LOCAL_DIR }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-cpu.txt

      - name: Test with pytest
        run: |
          python -m pytest -vs

  test-windows:
    needs: download-model
    runs-on: windows-2022
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements/requirements-cpu.txt'

      - name: Restore model cache
        uses: actions/cache@v4
        with:
          path: ${{ env.LOCAL_DIR }}
          key: ${{ runner.os }}-model-${{ env.LLM_MODEL_REPO }}-${{ env.LLM_MODEL_FILE }}

      - name: Check model exists
        run: dir ${{ env.LOCAL_DIR }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements-cpu.txt

      - name: Test with pytest
        run: |
          python -m pytest -vs
